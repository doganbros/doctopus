#########################
Developer Guideline
#########################

This document focuses frontend and backend development of Purpie project.


***************************************
Frontend
***************************************


Requirements 
============

* `Node.js <https://nodejs.org/en/download/>`_. (>= 10.13.0, except for v13) (Windows Build Tools for Windows systems)
* `Yarn <https://classic.yarnpkg.com/en/docs/install>`_.


Clone Repository
================

.. code-block:: rst

  git clone https://github.com/doganbros/purpie
  cd purpie


Install dependencies
====================

.. code-block:: rst

  yarn install
  


Set environment variables into .env file:
=========================================

.. code-block:: rst

  cp .env.example .env 
  

Then make changes to the boilerplate provided

Setting web server and routing
==============================

If Purpie is installed on your local computer, you will need to add the following line to your hosts file. The hosts file for Unix based system including MacOs is ``/etc/hosts`` where as on Windows, it is ``C:\windows\system32\drivers\etc\hosts``.


.. code-block:: rst

 127.0.0.1	purpie.localhost


Run project
===========

.. code-block:: rst

  yarn start
  

Try Purpie
==========

* Visit http://purpie.localhost:3000 (3000 is the default port) and create your super admin user.

***************************************
Backend
***************************************


Requirements 
============

* `Node.js <https://nodejs.org/en/download/>`_. (>= 10.13.0, except for v13) (Windows Build Tools for Windows systems)
* `Yarn <https://classic.yarnpkg.com/en/docs/install>`_.
* `NestCli <https://docs.nestjs.com/cli/overview>`_.
* `Postgress <https://www.postgresql.org/download/>`_.

First steps are same with fronted setup.

Create Postgres database
========================

Please follow the steps below to get a development Postgres server running. The easiest way to use `docker <https://www.docker.com>`_. If you have running Postgres database server you can skip these steps and simply create an Purpie database.

* Make sure you have docker installed on your computer. If you do not have docker already on your computer, Go to https://www.docker.com/get-started, choose your platform and click download. Follow the simple steps to get docker installed on your computer.

* Open your terminal (command prompt or preferably powershell on windows).

* Enter the command 

.. code-block:: rst

  docker run --name purpie-postgres-dev -e POSTGRES_PASSWORD=YOUR_DB_PASSWORD -p 5432:5432 -d postgres 
  

* Postgres docker image will be downloaded and Postgres Docker container with the name purpie-postgres-dev will up and serve from port 5432 after this command.

* To connect your Postgres database.

.. code-block:: rst

 docker exec -it purpie-postgres-dev psql -U postgres
  

* To create your Purpie database.

.. code-block:: rst

 CREATE DATABASE purpie;
  

* Update your ``.env`` file with ``YOUR_DB_PASSWORD`` .

* Run ``\q`` to quit from Psql and Docker container.


Run project
===========

To run backend server in production 

.. code-block:: rst

  yarn start:server   
  

To run backend server in development 

.. code-block:: rst

  yarn start:server:dev   
  

API Testing
===========

Visit http://purpie.localhost:8000/swagger/ to try out some backend APIs.



